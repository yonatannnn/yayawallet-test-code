// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	models "yayawallet-webhook/models"

	mock "github.com/stretchr/testify/mock"
)

// WebhookUseCase is an autogenerated mock type for the WebhookUseCase type
type WebhookUseCase struct {
	mock.Mock
}

// ProcessWebhook provides a mock function with given fields: payload, receivedSignature
func (_m *WebhookUseCase) ProcessWebhook(payload models.WebhookPayload, receivedSignature string) (bool, error) {
	ret := _m.Called(payload, receivedSignature)

	var r0 bool
	if rf, ok := ret.Get(0).(func(models.WebhookPayload, string) bool); ok {
		r0 = rf(payload, receivedSignature)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.WebhookPayload, string) error); ok {
		r1 = rf(payload, receivedSignature)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewWebhookUseCase interface {
	mock.TestingT
	Cleanup(func())
}

// NewWebhookUseCase creates a new instance of WebhookUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWebhookUseCase(t mockConstructorTestingTNewWebhookUseCase) *WebhookUseCase {
	mock := &WebhookUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
